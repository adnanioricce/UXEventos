// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SucessoEventos.Entities;

#nullable disable

namespace SucessoEventos.Web.Data
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SucessoEventos.Entities.Atividade", b =>
                {
                    b.Property<int>("CodAtv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAtv"));

                    b.Property<string>("DescAtv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("CodAtv");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("SucessoEventos.Entities.AxParticipanteAtividade", b =>
                {
                    b.Property<int>("CodPar")
                        .HasColumnType("int");

                    b.Property<int>("CodAtv")
                        .HasColumnType("int");

                    b.Property<int>("AtividadeCodAtv")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteCodPar")
                        .HasColumnType("int");

                    b.HasKey("CodPar", "CodAtv");

                    b.HasIndex("AtividadeCodAtv");

                    b.HasIndex("ParticipanteCodPar");

                    b.ToTable("AxParticipanteAtividades");
                });

            modelBuilder.Entity("SucessoEventos.Entities.AxParticipantePacote", b =>
                {
                    b.Property<int>("CodPar")
                        .HasColumnType("int");

                    b.Property<int>("CodPacote")
                        .HasColumnType("int");

                    b.Property<int>("PacoteCodPacote")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteCodPar")
                        .HasColumnType("int");

                    b.HasKey("CodPar", "CodPacote");

                    b.HasIndex("PacoteCodPacote");

                    b.HasIndex("ParticipanteCodPar");

                    b.ToTable("AxParticipantePacotes");
                });

            modelBuilder.Entity("SucessoEventos.Entities.Pacote", b =>
                {
                    b.Property<int>("CodPacote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodPacote"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodPacote");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("SucessoEventos.Entities.Participante", b =>
                {
                    b.Property<int>("CodPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodPar"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodPar");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("SucessoEventos.Entities.AxParticipanteAtividade", b =>
                {
                    b.HasOne("SucessoEventos.Entities.Atividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("AtividadeCodAtv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SucessoEventos.Entities.Participante", "Participante")
                        .WithMany("AxParticipanteAtividades")
                        .HasForeignKey("ParticipanteCodPar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("SucessoEventos.Entities.AxParticipantePacote", b =>
                {
                    b.HasOne("SucessoEventos.Entities.Pacote", "Pacote")
                        .WithMany()
                        .HasForeignKey("PacoteCodPacote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SucessoEventos.Entities.Participante", "Participante")
                        .WithMany("AxParticipantePacotes")
                        .HasForeignKey("ParticipanteCodPar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacote");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("SucessoEventos.Entities.Participante", b =>
                {
                    b.Navigation("AxParticipanteAtividades");

                    b.Navigation("AxParticipantePacotes");
                });
#pragma warning restore 612, 618
        }
    }
}
